{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2019-05-06T00:58:51.598Z",
    "end": "2019-05-06T00:58:51.846Z",
    "duration": 248,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "790eee79-910e-4a00-8e9e-b51c3f45718b",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "0fa9b99a-4319-4639-80b2-5380829ead0f",
        "title": "1.verify_gorder_id",
        "fullFile": "/Users/benson/g/awsXiu/olaf-xiu/test_mocha/test_scripts/olaf_run_api.js",
        "file": "/test_scripts/olaf_run_api.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "1.verify_gorder_id \"before all\" hook",
            "timedOut": false,
            "duration": 2,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "done()",
            "err": {},
            "isRoot": false,
            "uuid": "dacbc858-c987-4cb7-888b-9f9829c13c44",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook",
            "fullTitle": "1.verify_gorder_id \"before each\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "//It is also possible to use addContext from within a beforeEach or afterEach test hook.\n//https://github.com/adamgruber/mochawesome\n//  addContext(this, 'The Login Chart');\n// context can be an image url and the report will show it inline\n//            addContext(this, 'http://lwx5924.gitee.io/pubpic/olaf_loginFlowChart.png');\ndone()",
            "err": {},
            "isRoot": false,
            "uuid": "a103bbfd-0b07-4fd6-b6c7-798a8f421a2b",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "1.verify_gorder_id \"after all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "35a5d53d-24d1-4e94-a979-a496da815c2e",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"after each\" hook",
            "fullTitle": "1.verify_gorder_id \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "console.log (\" to deleteee api_upload_value\");\ndelete api_upload_value;",
            "err": {},
            "isRoot": false,
            "uuid": "ca4eec04-6bcc-438b-a6f7-01b3fca85053",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "verify the gorider id",
            "fullTitle": "1.verify_gorder_id verify the gorider id",
            "timedOut": false,
            "duration": 227,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Time\",\n    \"value\": \"5/6/2019, 8:58:51 AM\"\n  },\n  {\n    \"title\": \"RouterPath\",\n    \"value\": \"localhost:3000/olaf/handlerVerifyGOrderId\"\n  },\n  {\n    \"title\": \"Request\",\n    \"value\": {\n      \"appname\": \"LBFramework\",\n      \"appversion\": \"1.0.0\",\n      \"client_data\": \"\",\n      \"client_time\": \"1547002471\",\n      \"country\": \"cn\",\n      \"device_id\": \"0e74223d30c221c209050dff31766420\",\n      \"device_mode\": \"Netease MuMu\",\n      \"hotversion\": \"\",\n      \"packagename\": \"olaf\",\n      \"systemversion\": \"Android OS 6.0.1 / API-23 (V417IR/eng.root.20181010.162559)\",\n      \"timezone_offset\": 28800,\n      \"user_id\": \"123\",\n      \"production_id\": \"com.gameone.candycruise.coin60\",\n      \"channel\": \"GP\",\n      \"gorder_id\": \"8acf33f0-6f2c-11e9-b6c5-816a644f3a3a\",\n      \"is_patch\": true,\n      \"receipt\": \"{\\\"orderId\\\":\\\"GPA.3389-7381-0962-49879\\\",\\\"packageName\\\":\\\"com.gameone.candycruiseswap.free\\\",\\\"productId\\\":\\\"com.gameone.candycruise.coin60\\\",\\\"purchaseTime\\\":1529922596775,\\\"purchaseState\\\":0,\\\"purchaseToken\\\":\\\"ikhcippimdpbomdobijholnc.AO-J1OwfRG69ghzOzJczSvmFzCRO7zD4J1RTaFM883V1gdCeWAeY4XFwnFgWnIwY7SNlbrt_JbYbnC7uuiwsxSOJsU4fLNpAl5dDFM6-Q-tr_4FNal3Y7BXkB38aiJ6MtkrdH-3RP1MLoUsFOYm8rFh0sx0GExX0EkaXdXUXj7FxWhnV2YCni_g\\\"}\"\n    }\n  },\n  \"------------------------------\",\n  {\n    \"title\": \"Ori-Response\",\n    \"value\": \"{\\n  \\\"req\\\": {\\n    \\\"method\\\": \\\"POST\\\",\\n    \\\"url\\\": \\\"localhost:3000/olaf/handlerVerifyGOrderId\\\",\\n    \\\"data\\\": {\\n      \\\"payload\\\": \\\"H4sIAAAAAAAAE31Q227iMBT8FZSnXYmkvuTKG6VNF1SgC72AhBQZ20m8EDtynEKp.u9roBV92X3zmZkzZ8bvDqlrSSru9Jz761Tb107pjdM94q9cN0JJS0EPeMCCdCu4NBkjhlj0AhhxcoCBHwGA{AgeKdVKo98sTKUdGX8VlGeCWQDwyEcIMwwoQpAikIAAsDzHMApDH4GLvFLsaDzhhpOGd8btuLVkqcwlm51rQjek4J891JbkFmzeGsOri64vmVaCdabzTmjrwM5Vp{8wdBHu{Hj2YTScXXFZeFop4yEAYwigFYUoCJKf1u3Y8KAkz1SeN9w4PRTHAHSdtuH6XAoifIyiFWupsSfPKFWVV9hcdtWjRLI3qlvR2LcSMjx9aUmk5FsrvXuwY6E0.3KMCc0xzoEb5oi6EPLEXYc0cGMYktD3c0wwsSuiyWpiaOn0jG5519GcclHbiM77yjnZDdnK6a3sgb6HcZy4EY6hC5IQuX4SR8nK6a6.{nBis57E{wje7Ejt5Zrz89K57af{{7ueF1ptCzf8UZzOwAAlCUJBEkZR8I2eG2KOPPi.ojZcnu6ITUlFXYuK1WtVMbUWf0q1ldTrT90RnO7y2V2YFOVhehjRw{y1Sg.D2TQ63PgjOHsk6TiO8TMs2IC{9PnSX6Q7mRYvcrhbRvPJdq1NNlov13IQta3YNfv5dNQ8.fn9pO5vA3aTjkP3t2t05qcTssXL6HqxucYxEaNwbDaa{XLx7AGO79VTk06XVazTEjR7cHe7X4DbDVmwxdPiT5TuX0r5jJYDKbJi5Xw4H38BK5Lb6YoDAAA}\\\"\\n    },\\n    \\\"headers\\\": {\\n      \\\"user-agent\\\": \\\"node-superagent/3.8.3\\\",\\n      \\\"accept\\\": \\\"application/json\\\",\\n      \\\"content-type\\\": \\\"application/json\\\"\\n    }\\n  },\\n  \\\"header\\\": {\\n    \\\"x-powered-by\\\": \\\"Express\\\",\\n    \\\"content-type\\\": \\\"text/html; charset=utf-8\\\",\\n    \\\"content-length\\\": \\\"144\\\",\\n    \\\"etag\\\": \\\"W/\\\\\\\"90-mjnkBWPpvfz6UdNP1ojDk0kmeSE\\\\\\\"\\\",\\n    \\\"date\\\": \\\"Mon, 06 May 2019 00:58:51 GMT\\\",\\n    \\\"connection\\\": \\\"close\\\"\\n  },\\n  \\\"status\\\": 200,\\n  \\\"text\\\": \\\"H4sIAAAAAAAAEw3LUQqAIAwA0LvsOyGzpLqMrLmFEEVTg4juXu{{PZALlpphtm0D66GRNaQIM4xI4py0xktHxlqezOJpMKP16PteHDqEBi7WJHdQznUrf6Mt8V4C0lmTcoT3A0ETImZiAAAA\\\"\\n}\"\n  },\n  \"------------------------------\",\n  {\n    \"title\": \"Response\",\n    \"value\": \"{\\n  \\\"status\\\": 10,\\n  \\\"gorder_id\\\": \\\"8acf33f0-6f2c-11e9-b6c5-816a644f3a3a\\\",\\n  \\\"verify_result\\\": \\\"client_acquired\\\"\\n}\"\n  }\n]",
            "code": "console.log(\"to run it\");\nlet upload_value = citem.upload_value;\nconsole.log ( \"upload_value = \" + upload_value );\nconsole.log ( \"citem.read_mode = \" + citem.read_mode );\nconsole.log ( citem.read_mode === \"assign\" ) ;\nif ( citem.read_mode === \"assign\" ) {\n    console.log ( \"using assign mode to read data\" );\n    eval ( upload_value );\n    console.log ( \"using assign mode to read data - finish\"  );\n} else if ( \"json\" === citem.read_mode ) {\n    console.log( \"using json mode to read data\");\n    var api_upload_value = JSON.parse( upload_value );\n}\nconsole.dir ( api_upload_value );\nconsole.log (\"api_upload_value.appname= \" +api_upload_value.appname );\naddContext(this, {\n    title: 'Time',\n    value: new Date().toLocaleString() \n})\naddContext(this, {\n    title: 'RouterPath',\n    value: ip  + router_path\n})\n\nconsole.log ( \"to assign api_upload_value to o  \");\nconsole.dir ( api_upload_value );\nlet o = api_upload_value;\naddContext(this, {\n    title: 'Request',\n    value: o\n})\nlet sendupload = await ZipBase64.Encode( JSON.stringify(o))\nthis.timeout(50000);\nawait api.post(router_path)\n    .set(\"Accept\", \"application/json\")\n    .send({\n        payload: sendupload\n    })\n    .expect( 200)\n    .then ( async res =>  {\n        console.log ( \"res.res.text = \" + res.res.text );\n        addContext(this,\"------------------------------\");\n        addContext(this, {\n            title: \"Ori-Response\",\n\t\t\t\t\t\t\t\t//value: wordWrap( JSON.stringify ( res,null,2), 80 )\n\t\t\t\t\t\t\t\tvalue: ( JSON.stringify ( res,null,2))\n        })\n\n        let response_data_str = await ZipBase64.Decode(res.res.text) \n        console.log (response_data_str)\n        let response_data = JSON.parse( response_data_str)\n        _to_delete_user_id_list.push ( response_data.user_id )\n\n\n        addContext(this,\"------------------------------\");\n        addContext(this, {\n            title: \"Response\",\n\t\t\t\t\t\t\t\tvalue: JSON.stringify( response_data,null,2)\n        })\n\n\t\t\t\t\t\t\texpect(response_data.status).to.equal(0);\n        //done()\n    })\n//done()",
            "err": {
              "message": "AssertionError: expected 10 to equal 0",
              "estack": "AssertionError: expected 10 to equal 0\n    at api.post.set.send.expect.then (/Users/benson/g/awsXiu/olaf-xiu/test_mocha/test_scripts/olaf_run_api.js:222:40)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)",
              "diff": "- 10\n+ 0\n"
            },
            "isRoot": false,
            "uuid": "13e0ef4e-70fc-459f-8b38-f7e393fcb8aa",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [
          "13e0ef4e-70fc-459f-8b38-f7e393fcb8aa"
        ],
        "pending": [],
        "skipped": [],
        "duration": 227,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}